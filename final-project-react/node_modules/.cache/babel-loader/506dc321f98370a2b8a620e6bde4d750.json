{"ast":null,"code":"var _jsxFileName = \"D:\\\\Insight_workshop\\\\Django_React_project\\\\final project(React)\\\\final-project-react\\\\src\\\\Assignment\\\\CreateAssignment.js\";\nimport React, { Component } from 'react';\nimport '../Studycomponents/SMaterialForm.css';\nexport default class SMaterialForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      file_title: '',\n      files: '',\n      classid: 5\n    };\n\n    this.handleSubmit = event => {\n      console.log('form submited'); //created object of FormData\n\n      const formData = new FormData(); // append input data to formdata\n\n      formData.append('file_title', this.state.file_title);\n      formData.append('files', this.state.files);\n      formData.append('classid', this.props['myclassid']);\n\n      if (this.state.file_title === '' && this.state.files === '') {\n        alert('you must fill both input fields');\n      } else {\n        /// post formdata to create assignment\n        fetch('http://127.0.0.1:8000/assignment/assignmentpdf_create/', {\n          method: 'POST',\n          body: formData\n        }).then(response => response.json()).then(result => {\n          console.log('Success: assignment', result);\n        }).catch(error => {\n          console.error('Error:', error);\n        }); // hide the form after submiting the data\n        // this.props.onHideForm()\n      }\n\n      event.preventDefault();\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value //values is used for text\n\n      });\n      console.log('this is input', this.state);\n    };\n\n    this.onInputFilesChange = event => {\n      this.setState({\n        [event.target.name]: event.target.files //.files is used for files\n\n      });\n    };\n\n    this.onClickCancel = () => {\n      this.props.onHideForm();\n    };\n  }\n\n  render() {\n    // console.log('form section', this.state.display)\n    console.log('this is class id ', this.props['myclassid']); // importing the variable form the state\n\n    const {\n      file_title\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"study-entry-form\",\n      style: {\n        display: \"inline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"Create Assignment: \"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"Enter Question title : \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 67\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"textinput\",\n      name: \"file_title\",\n      value: file_title,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 155\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"upload file:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      className: \"fileinput\",\n      name: \"files\",\n      onChange: this.onInputFilesChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 134\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      onClick: this.onClickCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["D:/Insight_workshop/Django_React_project/final project(React)/final-project-react/src/Assignment/CreateAssignment.js"],"names":["React","Component","SMaterialForm","state","file_title","files","classid","handleSubmit","event","console","log","formData","FormData","append","props","alert","fetch","method","body","then","response","json","result","catch","error","preventDefault","onInputChange","setState","target","name","value","onInputFilesChange","onClickCancel","onHideForm","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../Studycomponents/SMaterialForm.css'\r\n\r\nexport default class SMaterialForm extends Component {\r\n\r\n    state = {\r\n        file_title: '',\r\n        files: '',\r\n        classid: 5\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        console.log('form submited')\r\n        //created object of FormData\r\n        const formData = new FormData();\r\n        // append input data to formdata\r\n        formData.append( 'file_title', this.state.file_title )\r\n        formData.append('files', this.state.files)\r\n        formData.append('classid', this.props['myclassid'])\r\n\r\n        if ((this.state.file_title === '')&& (this.state.files === '')){\r\n            alert('you must fill both input fields')\r\n        }\r\n        else{\r\n            /// post formdata to create assignment\r\n        fetch('http://127.0.0.1:8000/assignment/assignmentpdf_create/',{\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n        console.log('Success: assignment', result);\r\n        })\r\n        .catch((error) => {\r\n        console.error('Error:', error);\r\n        });\r\n        // hide the form after submiting the data\r\n        // this.props.onHideForm()\r\n        }\r\n        event.preventDefault();\r\n        \r\n    }\r\n    // taking input data on every change of input\r\n    onInputChange = (event) =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value  //values is used for text\r\n        })\r\n        console.log('this is input', this.state)\r\n    }\r\n    // storing file and video to the variable  \r\n    onInputFilesChange = (event) =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.files //.files is used for files\r\n        })\r\n    }\r\n    // cancel the form display\r\n    onClickCancel = () =>{\r\n        this.props.onHideForm()\r\n    }\r\n    render() {\r\n        // console.log('form section', this.state.display)\r\n        console.log('this is class id ', this.props['myclassid'])\r\n        // importing the variable form the state\r\n        const {file_title} = this.state\r\n        return (\r\n            <div className = 'study-entry-form' style = {{display:\"inline\"}}>\r\n                        <form>\r\n                            <h2>Create Assignment: </h2>\r\n                            <label>Enter Question title : </label><br></br>\r\n                            <input type = \"text\" className = \"textinput\" name = 'file_title' value = {file_title} onChange = {this.onInputChange}></input><br></br>\r\n                            <label>upload file:</label>\r\n                            <input type = \"file\" className = 'fileinput' name = 'files' onChange = {this.onInputFilesChange}></input><br></br>\r\n                            <button type = \"submit\" className = \"btn\" onClick = {this.handleSubmit}>Submit</button>\r\n                            <button type = 'submit' className = \"btn\" onClick = {this.onClickCancel}>Cancel</button>\r\n                        </form>\r\n                    </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}