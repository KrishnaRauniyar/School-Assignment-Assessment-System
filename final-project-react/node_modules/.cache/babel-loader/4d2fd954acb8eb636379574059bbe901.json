{"ast":null,"code":"var _jsxFileName = \"D:\\\\Insight_workshop\\\\Django_React_project\\\\final project(React)\\\\final-project-react\\\\src\\\\Authentication\\\\ResetPassword.js\";\nimport React, { Component } from 'react';\nimport './UserLogin.css';\nexport default class UserLogin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      otppassword: '',\n      newpassword: '',\n      confirmpassword: '',\n      OTPcode: ''\n    };\n\n    this.componentDidMount = () => {\n      //request backend to send OTP code to the mail\n      const min = 1000;\n      const max = 9999;\n      const rand = min + Math.random() * (max - min);\n      const OTPdata = new FormData();\n      OTPdata.append('email', localStorage.getItem('email'));\n      OTPdata.append('otpcode', parseInt(rand));\n      console.log('userid', localStorage.getItem('UserId'));\n      this.setState({\n        OTPcode: parseInt(rand)\n      });\n      fetch('http://127.0.0.1:8000/user/send_otp/', {\n        method: 'POST',\n        body: OTPdata\n      }).then(result => {\n        console.log('success:', result);\n      }).then(error => {\n        console.log('error:', error);\n      });\n    };\n\n    this.onGoBack = () => {\n      this.props.onshowlogin();\n    };\n\n    this.handleSubmit = event => {\n      // reset password of the user\n      const formdata = new FormData(); // check whether the password and confirm password is same or not\n\n      if (this.state.newpassword === this.state.confirmpassword) {\n        // check whether the entered OTP is correct or not\n        if (this.state.OTPcode === parseInt(this.state.otppassword)) {\n          formdata.append('newpassword', this.state.newpassword);\n          fetch('http://127.0.0.1:8000/user/reset_password/' + localStorage.getItem('UserId'), {\n            method: 'POST',\n            Header: 'context-Type: application/json',\n            body: formdata\n          }).then(response => response.json()).then(result => {\n            console.log('success', result);\n            this.onGoBack();\n          }).catch(error => {\n            console.error('Error:', error);\n          });\n        } else {\n          alert('Please enter correct OTP code.');\n        }\n      } else {\n        alert('Confirmation password did not match');\n      }\n\n      event.preventDefault();\n    };\n\n    this.onChangeinput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      otppassword,\n      newpassword,\n      confirmpassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"signin-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Reset password\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"OTP Code\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"otppassword\",\n      value: otppassword,\n      required: true,\n      onChange: this.onChangeinput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"newpassword\",\n      value: newpassword,\n      required: true,\n      onChange: this.onChangeinput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmpassword\",\n      value: confirmpassword,\n      required: true,\n      onChange: this.onChangeinput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onGoBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Cancel\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/Insight_workshop/Django_React_project/final project(React)/final-project-react/src/Authentication/ResetPassword.js"],"names":["React","Component","UserLogin","state","otppassword","newpassword","confirmpassword","OTPcode","componentDidMount","min","max","rand","Math","random","OTPdata","FormData","append","localStorage","getItem","parseInt","console","log","setState","fetch","method","body","then","result","error","onGoBack","props","onshowlogin","handleSubmit","event","formdata","Header","response","json","catch","alert","preventDefault","onChangeinput","target","name","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './UserLogin.css'\r\n\r\nexport default class UserLogin extends Component {\r\n    state = {\r\n        otppassword: '',\r\n        newpassword: '',\r\n        confirmpassword: '',\r\n        OTPcode:''\r\n    }\r\n    componentDidMount = () =>{\r\n        //request backend to send OTP code to the mail\r\n        const min =1000;\r\n        const max = 9999;\r\n        const rand = min + Math.random() * (max - min);\r\n        const OTPdata = new FormData()\r\n        OTPdata.append('email', localStorage.getItem('email'))\r\n        OTPdata.append('otpcode', parseInt(rand))\r\n        console.log('userid', localStorage.getItem('UserId'))\r\n        this.setState({\r\n            OTPcode: parseInt(rand)\r\n        })\r\n        fetch('http://127.0.0.1:8000/user/send_otp/', {\r\n            method: 'POST',\r\n            body: OTPdata\r\n        }).then(result =>{\r\n            console.log('success:', result)\r\n        }).then(error =>{\r\n            console.log('error:', error)\r\n        })\r\n\r\n    }\r\n    onGoBack = () =>{\r\n        this.props.onshowlogin()\r\n    }\r\n    handleSubmit = (event) =>{\r\n        // reset password of the user\r\n        const formdata = new FormData()\r\n        // check whether the password and confirm password is same or not\r\n        if(this.state.newpassword === this.state.confirmpassword){\r\n            // check whether the entered OTP is correct or not\r\n            if(this.state.OTPcode === parseInt(this.state.otppassword)){\r\n                formdata.append('newpassword', this.state.newpassword)\r\n            fetch('http://127.0.0.1:8000/user/reset_password/'+localStorage.getItem('UserId'), {\r\n            method: 'POST',\r\n            Header: 'context-Type: application/json',\r\n            body: formdata\r\n            }\r\n            ).then((response) =>response.json())\r\n            .then((result)=>{\r\n                console.log('success', result)\r\n                this.onGoBack()\r\n            })\r\n            .catch((error)=>{\r\n                console.error('Error:',error)\r\n            })\r\n            }\r\n            else{\r\n                alert('Please enter correct OTP code.')\r\n            }\r\n        }\r\n        else{\r\n            alert('Confirmation password did not match')\r\n        }\r\n        event.preventDefault();\r\n\r\n    }\r\n    onChangeinput =(event)=>{\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n \r\n    render() {\r\n        const {otppassword, newpassword, confirmpassword} = this.state\r\n        return (\r\n            <div>\r\n                <form className = \"signin-form\" onSubmit = {this.handleSubmit}>\r\n                    <h2>Reset password</h2>\r\n                    <label>OTP Code</label>\r\n                    <input type = \"number\" name = \"otppassword\" value = {otppassword} required onChange = {this.onChangeinput}></input>\r\n                    <label>Password</label>\r\n                    <input type = \"password\" name = \"newpassword\" value = {newpassword} required onChange = {this.onChangeinput}></input>\r\n                    <label>Confirm Password</label>\r\n                    <input type = \"password\" name = \"confirmpassword\" value = {confirmpassword} required onChange = {this.onChangeinput}></input>\r\n                    <div className = 'btn-section'>\r\n                        <button type = \"submit\">submit</button>\r\n                        <button type = 'button' onClick = {this.onGoBack}>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}